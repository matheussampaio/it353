
package com.cdyne.ws.profanityws.profanity;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProfanityHttpGet", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProfanityHttpGet {


    /**
     * Basic Profanity Filter, which replaces curse words with the world [Explicit]. CDYNE uses a proprietary database of words. To suggest a new word, please email info@cdyne.com
     * 
     * @param text
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.FilterReturn
     */
    @WebMethod(operationName = "SimpleProfanityFilter")
    @WebResult(name = "FilterReturn", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public FilterReturn simpleProfanityFilter(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Text")
        String text);

    /**
     * Regular Profanity Filter, Allows you to specify the level you wish to clean, and this also goes through a number filter to help find cleanse more profanity.
     * 
     * @param text
     * @param useNumberFilter
     * @param levelToClean
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.FilterReturn
     */
    @WebMethod(operationName = "ProfanityFilter")
    @WebResult(name = "FilterReturn", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public FilterReturn profanityFilter(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Text")
        String text,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LevelToClean")
        String levelToClean,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "UseNumberFilter")
        String useNumberFilter);

    /**
     * Gets all the Types of Replacement values you are allowed to use
     * 
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfReplaceType
     */
    @WebMethod(operationName = "GetReplaceTypes")
    @WebResult(name = "ArrayOfReplaceType", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfReplaceType getReplaceTypes();

    /**
     * This will create a new User Defined Levels Identification Code for you when you want to create your own Profanity Levels.
     * 
     * @param alias
     * @param useDefaultDatabase
     * @param licenseKey
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "CreateUserDefinedKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult createUserDefinedKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Alias")
        String alias,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "UseDefaultDatabase")
        String useDefaultDatabase);

    /**
     * Creates a profanity level within a key. Use 0 For DefaultWordsLevel paramter if you do not wish to include words from default database.
     * 
     * @param level
     * @param description
     * @param defaultWordsLevel
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "CreateProfanityLevel")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult createProfanityLevel(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Description")
        String description,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "DefaultWordsLevel")
        String defaultWordsLevel,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key);

    /**
     * Gets all the profanity level.
     * 
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfProfanityLevel
     */
    @WebMethod(operationName = "GetProfanityLevels")
    @WebResult(name = "ArrayOfProfanityLevel", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfProfanityLevel getProfanityLevels(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key);

    /**
     * Adds a profanity word to a profanity level.
     * 
     * @param level
     * @param word
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "AddProfanityWordToLevelByKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult addProfanityWordToLevelByKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Word")
        String word);

    /**
     * Deletes a profanity word from a level.
     * 
     * @param level
     * @param word
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "DeleteProfanityWordFromLevelByKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult deleteProfanityWordFromLevelByKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Word")
        String word);

    /**
     * This will retrieve a list of all the keys based on a LicenseKey.
     * 
     * @param licenseKey
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfProfanityKey
     */
    @WebMethod(operationName = "GetKeysByLicenseKey")
    @WebResult(name = "ArrayOfProfanityKey", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfProfanityKey getKeysByLicenseKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey);

    /**
     * This will get all the words in a specific level.
     * 
     * @param level
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfString
     */
    @WebMethod(operationName = "GetWordsByLevel")
    @WebResult(name = "ArrayOfString", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfString getWordsByLevel(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level);

    /**
     * This will delete a profanity level from a key
     * 
     * @param level
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "DeleteProfanityLevelByKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult deleteProfanityLevelByKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level);

    /**
     * This will delete your key.
     * 
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "DeleteKeyByLicenseKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult deleteKeyByLicenseKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key);

    /**
     * This will add a word to our Non Profanity List, incase our Profanity Filter mistakens a word.
     * 
     * @param word
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "AddWordToNonProfanityListByKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult addWordToNonProfanityListByKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Word")
        String word);

    /**
     * This will delete a non-profane word from our Non Profanity Database.
     * 
     * @param word
     * @param licenseKey
     * @param key
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.UserDefinedResult
     */
    @WebMethod(operationName = "DeleteWordFromNonProfanityListByKey")
    @WebResult(name = "UserDefinedResult", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public UserDefinedResult deleteWordFromNonProfanityListByKey(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "LicenseKey")
        String licenseKey,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Key")
        String key,
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Word")
        String word);

    /**
     * 
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfProfanityLevel
     */
    @WebMethod(operationName = "GetDefaultLevels")
    @WebResult(name = "ArrayOfProfanityLevel", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfProfanityLevel getDefaultLevels();

    /**
     * 
     * @param level
     * @return
     *     returns com.cdyne.ws.profanityws.profanity.ArrayOfString
     */
    @WebMethod(operationName = "GetDefaultWordsByLevel")
    @WebResult(name = "ArrayOfString", targetNamespace = "http://ws.cdyne.com/ProfanityWS/Profanity.asmx", partName = "Body")
    public ArrayOfString getDefaultWordsByLevel(
        @WebParam(name = "string", targetNamespace = "http://www.w3.org/2001/XMLSchema", partName = "Level")
        String level);

}
